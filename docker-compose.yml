version: "3.10"

x-rabbit-variable: &rabbit-variables
  RABBITMQ_DEFAULT_USER: guest
  RABBITMQ_DEFAULT_PASS: guest

x-db-variables: &db-variables
  POSTGRES_USER: db_user
  POSTGRES_PASSWORD: db_pass
  POSTGRES_DB: queue_db
  POSTGRES_PORT: 5432

x-consumer-variables: &consumer-variables
  DB_HOST: db-service-queue
  DB_PORT: 5432
  DB_USER: db_user
  DB_PASSWORD: db_pass
  DB_NAME: queue_db
  RABBIT_HOST: rabbitmq
  RABBIT_PORT: 5672

services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq_broker
    restart: always
    environment:
      <<: *rabbit-variables
      RABBITMQ_LOAD_DEFINITIONS: "/etc/rabbitmq/definitions.json"
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - ./rabbitmq-definitions.json:/etc/rabbitmq/definitions.json
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "check_running" ]
      interval: 10s
      timeout: 5s
      retries: 5


  db-service-queue:
    image: postgres:15-alpine
    environment: *db-variables
    volumes:
      - "postgres_data:/var/lib/postgresql/data/"
    ports:
      - "5432:5432"
    expose:
      - 5432

    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U db_user -d queue_db" ]
      interval: 10s
      timeout: 5s
      retries: 5

  consumer:
    build: .
    depends_on:
      rabbitmq:
        condition: service_healthy
      db-service-queue:
        condition: service_healthy
    environment: *consumer-variables
    restart: always
    command: [ "python", "consumer.py" ]


volumes:
  postgres_data:
